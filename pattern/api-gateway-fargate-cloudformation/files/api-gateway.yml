AWSTemplateFormatVersion: '2010-09-09'
Description: Deploy an API Gateway ingress for an AWS Fargate hosted service

Parameters:
  VpcId:
    Type: String
    Description: The VPC that the service is running inside of
  PublicSubnetIds:
    Type: List<AWS::EC2::Subnet::Id>
    Description: List of public subnet ID's to put the API gateway link in
  ServiceSecurityGroup:
    Type: String
    Description: The service's security group

Resources:

  # The API Gateway itself
  ApiGateway:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: fargate-api-gateway
      ProtocolType: HTTP

  #ApiGatewayRoute:
  #  Type: AWS::ApiGatewayV2::Route
  #  Properties:
  #    ApiId: !Ref ApiGateway
  #    RouteKey:

  # This allows the AWS managed API Gateway to
  # communicate to resources inside of your own VPC
  ApiGatewayVpcLink:
    Type: AWS::ApiGatewayV2::VpcLink
    Properties:
      Name: fargate-vpc-link
      SecurityGroupIds:
        - !Ref ApiGatewaySecurityGroup
      SubnetIds: !Ref PublicSubnetIds

  # Setup the integration between the API Gateway and the VPC Link
  ApiGatewayVpcLinkIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref ApiGateway
      ConnectionId: !Ref ApiGatewayVpcLink
      ConnectionType: VPC_LINK
      IntegrationType: HTTP_PROXY
      IntegrationUri: http://web.internal:3000

  # This security group is used by the VPC link, so that
  # you can control which resources in the VPC the VPC link is
  # allowed to communicate with.
  ApiGatewaySecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for API gateway
      VpcId: !Ref VpcId

  # Configure the security group of the service to accept
  # inbound traffic originating from the security group of
  # the API gateway's VPC link
  ServiceIngressFromApiGateway:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Allow API Gateway to communiate to the service
      GroupId: !Ref ServiceSecurityGroup
      FromPort: 3000
      ToPort: 3000
      IpProtocol: -1
      SourceSecurityGroupId: !Ref ApiGatewaySecurityGroup

#   RootMethodGet:
#     Type: AWS::ApiGateway::Method
#     Properties:
#       RestApiId: !Ref AppApi
#       ResourceId: !GetAtt AppApi.RootResourceId
#       HttpMethod: GET
#       AuthorizationType: NONE
#       Integration:
#         Type: HTTP_PROXY
#         ConnectionType: VPC_LINK
#         IntegrationHttpMethod: GET
#         ConnectionId: !Ref VPCLinkRestNlbInternal
#         Uri: !Sub http://${NlbInternalDns}

#   Deployment:
#     Type: AWS::ApiGateway::Deployment
#     DependsOn:
#     - RootMethodGet
#     Properties:
#       RestApiId: !Ref AppApi

#   Stage:
#     Type: AWS::ApiGateway::Stage
#     Properties:
#       StageName: Prod
#       RestApiId: !Ref AppApi
#       DeploymentId: !Ref Deployment

#   VPCLinkRestNlbInternal:
#     Type: AWS::ApiGateway::VpcLink
#     Properties:
#       Name: VPCLinkRestNlbInternal
#       TargetArns:
#         - !Ref NlbInternalArn

# Outputs:

#   # API Gateway endpoint to be used during tests
#   AppApiEndpoint:
#     Description: API Endpoint
#     Value: !Sub "https://${AppApi}.execute-api.${AWS::Region}.amazonaws.com/Prod"